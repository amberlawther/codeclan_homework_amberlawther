library(tidyverse)
data(msleep)
view(msleep)
library(infer)
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
observed_stat
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_histogram
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_histogram
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_histogram()
msleep %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(bins = 30)
msleep %>%
ggplot(aes(y = sleep_total)) +
geom_boxplot()
msleep %>%
ggplot(aes(y = sleep_total)) +
geom_boxplot() +
coord_flip()
msleep %>%
ggplot(aes(y = sleep_total)) +
geom_boxplot()
msleep %>%
ggplot(aes(y = sleep_total)) +
geom_boxplot() +
coord_flip()
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution
null_distribution %>%
visualise(bins = 30)
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = observed_stat$sleep_total, direction = "both")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = observed_stat, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "both")
p_value
omni_vs_herbi <- msleep %>%
select(vore, sleep_total) %>%
filter(vore == "omni",
vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
select(vore, sleep_total) %>%
filter(vore == "omni") %>%
filter(vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
select(vore, sleep_total) #%>%
#filter(vore == "omni") %>%
#filter(vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
select(vore, sleep_total) %>%
filter(vore == "omni")# %>%
#filter(vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
select(vore, sleep_total) %>%
filter(vore == "omni") %>%
filter(vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
select(vore, sleep_total) %>%
#filter(vore == "omni") %>%
filter(vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
filter(vore == "omni") %>%
filter(vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
filter(vore == "omni", "herbi")
omni_vs_herbi <- msleep %>%
filter(vore == "omni",
vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
filter(vore == "omni",
vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
ungroup %>%
filter(vore == "omni",
vore == "herbi")
omni_vs_herbi
omni_vs_herbi <- msleep %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi"))
omni_vs_herbi
omni_vs_herbi <- msleep %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi")) %>%
select(vore, omni_herbi)
omni_vs_herbi
omni_vs_herbi <- msleep %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi", na.rm = TRUE)) %>%
select(vore, omni_herbi)
omni_vs_herbi <- msleep %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi")) %>%
select(vore, omni_herbi, na.rm = TRUE)
omni_vs_herbi <- msleep %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi"), na.rm = TRUE) %>%
select(vore, omni_herbi)
omni_vs_herbi
omni_vs_herbi <- msleep %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi"), na.rm = TRUE) %>%
select(omni_herbi, sleep_total)
omni_vs_herbi
omni_vs_herbi <- msleep %>%
drop_na() %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi")) %>%
select(omni_herbi, sleep_total)
omni_vs_herbi
msleep_tidy <- msleep %>%
drop_na()
msleep_tidy
omni_vs_herbi <- msleep_tidy %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi")) %>%
select(omni_herbi, sleep_total)
omni_vs_herbi
omni_vs_herbi <- msleep_tidy %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi"), na.rm == TRUE) %>%
select(omni_herbi, sleep_total)
omni_vs_herbi <- msleep_tidy %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi")) %>%
select(omni_herbi, sleep_total)
omni_vs_herbi
omni_vs_herbi <- msleep_tidy %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi"), na.rm = TRUE) %>%
select(omni_herbi, sleep_total)
omni_vs_herbi
omni_vs_herbi <- msleep_tidy %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi")) %>%
select(omni_herbi, sleep_total)
drop_na()
omni_vs_herbi <- msleep_tidy %>%
mutate(omni_herbi = case_when(vore == "omni" ~ "omni",
vore == "herbi" ~ "herbi")) %>%
select(omni_herbi, sleep_total) %>%
drop_na()
omni_vs_herbi
omni_vs_herbi %>%
group_by(omni_herbi) %>%
summarise(n = n())
omni_vs_herbi %>%
ggplot(aes(y = sleep_total, x = omni_herbi)) +
geom_boxplot()
null_distribution_oh <- omni_vs_herbi %>%
specify(sleep_total ~ omni_herbi) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
head(null_distribution_oh)
observed_stat <- omni_vs_herbi %>%
specify(sleep_total ~ omni_herbi) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution_oh %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
p_value <- null_distribution_oh %>%
get_p_value(obs_stat = observed_stat, direction = "right")
p_value
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation = "domesticated",
"domesticated", "not_domesticated"))
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"))
head(domesticated_animals)
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated")) %>%
drop_na()
head(domesticated_animals)
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"))
head(domesticated_animals)
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"))
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"))
domesticated_animals
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"),
is.na(conservation, "not_domesticated"))
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"),
is.na(conservation), "not_domesticated"))
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"),
is.na(conservation), "not_domesticated")
domesticated_animals
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated"),
is.na, "not_domesticated")
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated", "not_domesticated")) %>%
mutate(domesticated_flag = case_when(conservation ==
"NA" ~ "not_domesticated"))
domesticated_animals
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated",
"not_domesticated"),
case_when(conservation == "NA" ~
"not_domesticated"))
domesticated_animals
domesticated_animals <- msleep %>%
mutate(conservation = case_when(conservation == "NA" ~ "unknown")) %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated",
"not_domesticated"))
domesticated_animals
domesticated_animals <- msleep %>%
mutate(domesticated_flag = case_when(conservation == "NA" ~
"not_domesticated")) %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated",
"not_domesticated"))
domesticated_animals
domesticated_animals <- msleep %>%
mutate(domesticated_flag = case_when(conservation == NA ~
"not_domesticated")) %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated",
"not_domesticated"))
domesticated_animals
domesticated_animals <- msleep %>%
mutate(domesticated_flag = ifelse(conservation == "domesticated",
"domesticated",
"not_domesticated"))
domesticated_animals
null_distribution_domesticated <- domesticated_animals %>%
specify(response = domesticated_flag, success = "domesticated") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "simulate") %>%
calculate(stat = "prop")
head(null_distribution_domesticated)
null_distribution_domesticated %>%
visualise()
observed_stat_domesticated <- domesticated_animals %>%
specify(response = domesticated_flag, success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution_domesticated %>%
visualise() +
shade_p_value(obs_stat = observed_stat_domesticated, direction = "both")
null_distribution_domesticated %>%
visualise() +
shade_p_value(obs_stat = observed_stat_domesticated, direction = "right")
p_value <- null_distribution_domesticated %>%
get_p_value(obs_stat = observed_stat_domesticated, direction = "right")
p_value
